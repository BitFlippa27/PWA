{"ast":null,"code":"import immediate from 'immediate';\nimport uuidV4 from 'uuid';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\nimport getArguments from 'argsarray';\nimport inherits from 'inherits';\nimport { EventEmitter } from 'events';\n\nfunction mangle(key) {\n  return '$' + key;\n}\n\nfunction unmangle(key) {\n  return key.substring(1);\n}\n\nfunction Map$1() {\n  this._store = {};\n}\n\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\n\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\n\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\n\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = (mangled in this._store);\n  delete this._store[mangled];\n  return res;\n};\n\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\n\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1(); // init with an array\n\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\n\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\n\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\n\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\n\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\n\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n} // based on https://github.com/montagejs/collections\n\n\nvar ExportedSet;\nvar ExportedMap;\n{\n  if (supportsMapAndSet()) {\n    // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else {\n    // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\nfunction isBinaryObject(object) {\n  return typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer || typeof Blob !== 'undefined' && object instanceof Blob;\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  } // IE10-11 slice() polyfill\n\n\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n\n  var size = object.size;\n  var type = object.type; // Blob\n\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  } // PhantomJS slice() replacement\n\n\n  return object.webkitSlice(0, size, type);\n} // most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n\n  if (proto === null) {\n    // not sure when this happens, but I guess it can\n    return true;\n  }\n\n  var Ctor = proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n\n    return newObject;\n  } // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n\n\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this; // if the last argument is a function, assume its a callback\n\n    var usedCB = typeof args[args.length - 1] === 'function' ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        }); // create a callback for this invocation\n        // apply the function in the orig context\n\n        args.push(callback);\n        resp = func.apply(self, args);\n\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    }); // if there is a callback, call it back\n\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n\n    self.constructor.emit('debug', logArgs); // override the callback itself to log the response\n\n    var origCallback = args[args.length - 1];\n\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(err ? ['error', err] : ['success', res]);\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n\n    var self = this;\n    logApiCall(self, name, args);\n\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n\n    return callback.apply(this, args);\n  }));\n} // like underscore/lodash _.pick()\n\n\nfunction pick(obj, arr) {\n  var res = {};\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n\n  return res;\n} // Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\n\n\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n} // shim for P/CouchDB adapters that don't directly implement _bulk_get\n\n\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs; // consolidate into one request per doc if possible\n\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {\n      results: results\n    });\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {\n      id: id,\n      docs: docs\n    };\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n  var i = 0;\n\n  function nextBatch() {\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId); // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      }); // remove falsey / undefined revisions\n\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs; // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n\n        formatResult = formatResultForOpenRevsGet;\n      } // globally-supplied options\n\n\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n\n        if (err) {\n          result = [{\n            error: err\n          }];\n        } else {\n          result = formatResult(res);\n        }\n\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n} // Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\n\ninherits(Changes, EventEmitter);\n/* istanbul ignore next */\n\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n  attachBrowserEvents(this);\n}\n\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n\n  var self = this;\n  var inprogress = false;\n\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n\n    inprogress = true;\n    var changesOpts = pick(opts, ['style', 'include_docs', 'attachments', 'conflicts', 'filter', 'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs']);\n    /* istanbul ignore next */\n\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n\n      inprogress = false;\n    }).on('error', onError);\n  }\n\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n\n  EventEmitter.prototype.removeListener.call(this, dbName, this._listeners[id]);\n  delete this._listeners[id];\n};\n/* istanbul ignore next */\n\n\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = localStorage[dbName] === \"a\" ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  } // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n\n\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n\n    max = maxTimeout;\n  }\n\n  var ratio = Math.random();\n  var range = max - min;\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n\n  if (!min) {\n    max = 2000;\n  }\n\n  return randomNumber(min, max);\n} // designed to give info to browser users, who are disturbed\n// when they see http errors in the console\n\n\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) {\n          // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n\n      return to;\n    };\n  }\n}\nvar $inject_Object_assign = assign;\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n\n\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n\n  return res;\n} // shim for Function.prototype.name,\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\n\n\nfunction invalidIdError(id) {\n  var err;\n\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !/^_(design|local)/.test(id)) {\n    err = createError(RESERVED_ID);\n  }\n\n  if (err) {\n    throw err;\n  }\n} // Checks if a PouchDB object is \"remote\" or not. This is\n\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n\n\n  if (typeof db.type === 'function') {\n    guardedConsole('warn', 'db.type() is deprecated and will be removed in ' + 'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n\n\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) : EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n\n  var parts = s.split('/');\n\n  if (parts.length === 2) {\n    return parts;\n  }\n\n  if (parts.length === 1) {\n    return [s, s];\n  }\n\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n} // originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n\n\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName = \"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g; // use the \"loose\" parser\n\n/* eslint maxlen: 0, no-useless-escape: 0 */\n\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n  return uri;\n} // Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n} // this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\n\n\nfunction upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n\n        doc = {};\n      } // the user might change the _rev, so save it for posterity\n\n\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({\n          updated: false,\n          rev: docRev\n        });\n      } // users aren't allowed to modify these values,\n      // so reset them here\n\n\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n}; // Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\n\n\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n    var builder = new Builder();\n\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n\n    return builder.getBlob(properties.type);\n  }\n} // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\n\n\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {\n    type: type\n  });\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n} //Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\n\n\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n\n  return binary;\n} // shim for browsers that don't support it\n\n\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n\n    if (hasBinaryString) {\n      return callback(result);\n    }\n\n    callback(arrayBufferToBinaryString(result));\n  };\n\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n} // simplified API. universal browser support is assumed\n\n\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n\n  reader.readAsArrayBuffer(blob);\n} // this is not used in the browser\n\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction rev(doc, deterministic_revs) {\n  var clonedDoc = clone(doc);\n\n  if (!deterministic_revs) {\n    return uuidV4.v4().replace(/-/g, '').toLowerCase();\n  }\n\n  delete clonedDoc._rev_tree;\n  return stringMd5(JSON.stringify(clonedDoc));\n}\n\nvar uuid = uuidV4.v4; // We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\n\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n\n  while (node = toVisit.pop()) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n\n    if (branches.length) {\n      // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({\n          pos: pos + 1,\n          ids: branches[i]\n        });\n      }\n\n      continue;\n    }\n\n    var deleted = !!tree[1].deleted;\n    var id = tree[0]; // sort by deleted, then pos, then id\n\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted : winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n} // Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\n\n\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n  var node;\n\n  while (node = toVisit.pop()) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx = callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({\n        pos: pos + 1,\n        ids: branches[i],\n        ctx: newCtx\n      });\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({\n        rev: pos + \"-\" + id,\n        pos: pos,\n        opts: opts\n      });\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n\n  return leaves;\n} // returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\n\n\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n\n  return conflicts;\n} // compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\n\n\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos, revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n} // build up a list of all the paths to the leafs in this revision tree\n\n\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n\n  while (node = toVisit.pop()) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n    var history = node.history ? node.history.slice() : [];\n    history.push({\n      id: id,\n      opts: opts\n    });\n\n    if (isLeaf) {\n      paths.push({\n        pos: pos + 1 - history.length,\n        ids: history\n      });\n    }\n\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({\n        pos: pos + 1,\n        ids: branches[i],\n        history: history\n      });\n    }\n  }\n\n  return paths.reverse();\n} // for a better overview of what this is doing, read:\n\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n} // classic binary search\n\n\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n\n  while (low < high) {\n    mid = low + high >>> 1;\n\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n\n  return low;\n} // assuming the arr is sorted, insert the item in the proper place\n\n\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n} // Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\n\n\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n\n  return root;\n} // compare the IDs of two trees\n\n\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n} // Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\n\n\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{\n    tree1: in_tree1,\n    tree2: in_tree2\n  }];\n  var conflicts = false;\n\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status = tree1[1].status === 'available' || tree2[1].status === 'available' ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({\n            tree1: tree1[2][j],\n            tree2: tree2[2][i]\n          });\n          merged = true;\n        }\n      }\n\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n\n  return {\n    conflicts: conflicts,\n    tree: in_tree1\n  };\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {\n      tree: [path],\n      conflicts: 'new_leaf'\n    };\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({\n        pos: branch.pos,\n        ids: res.tree\n      });\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n      var candidateParents = [];\n      var trees = [];\n      trees.push({\n        ids: t1.ids,\n        diff: diff,\n        parent: null,\n        parentIdx: null\n      });\n\n      while (trees.length > 0) {\n        var item = trees.pop();\n\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n\n          continue;\n        }\n\n        var elements = item.ids[2];\n\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({\n          pos: t1.pos,\n          ids: t1.ids\n        });\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  } // We didnt find\n\n\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n} // To ensure we dont grow the revision tree infinitely, we stem old revisions\n\n\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n  var result;\n\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = path.pos + s + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else {\n      // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    } // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n\n\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  } // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n\n\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n} // return true if a rev exists in the rev tree, false otherwise\n\n\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n  var node;\n\n  while (node = toVisit.pop()) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n\n    var branches = node.ids[2];\n\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({\n        pos: node.pos + 1,\n        ids: branches[i]\n      });\n    }\n  }\n\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n} // check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\n\n\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n  var tree;\n\n  while (tree = toVisit.pop()) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return /^_local/.test(id);\n} // returns the current leaf node for a given revision\n\n\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n\n  while (node = toVisit.pop()) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n    var history = node.history ? node.history.slice() : [];\n    history.push({\n      id: id,\n      pos: pos,\n      opts: opts\n    });\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({\n        pos: pos + 1,\n        ids: branches[j],\n        history: history\n      });\n    }\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$1, EventEmitter);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n\n  function onDestroy() {\n    self.cancel();\n  }\n\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {\n      status: 'cancelled'\n    });\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\n\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\n\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{\n    rev: doc._rev\n  }];\n\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree).map(function (x) {\n      return {\n        rev: x.rev\n      };\n    });\n  }\n\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n\n  return change;\n}\n\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n  /* istanbul ignore else */\n\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n  opts = clone(opts);\n\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n\n  if (!opts.since) {\n    opts.since = 0;\n  }\n\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {\n          status: 'cancelled'\n        });\n        return;\n      }\n\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n  /* istanbul ignore else */\n\n\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn', 'The \"' + key + '\" option was passed in to changes/replicate, ' + 'but pouchdb-changes-filter plugin is not installed, so it ' + 'was ignored. Please install the plugin to enable filtering.');\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  } // 0 and 1 should return 1 document\n\n\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n\n\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n/*\n * A generic pouch adapter\n */\n\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n} // Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\n\n\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || results[0] && results[0].error) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0] : results);\n    }\n  };\n} // clean docs given to us by the user\n\n\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att], ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n} // compare two docs, first by _id then by _rev\n\n\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n} // for every node in a revision tree computes its distance from the closest\n// leaf\n\n\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n\n    if (prnt !== undefined) {\n      edges.push({\n        from: prnt,\n        to: rev$$1\n      });\n    }\n\n    return rev$$1;\n  });\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys = 'limit' in opts ? opts.keys.slice(opts.skip, opts.limit + opts.skip) : opts.skip > 0 ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n} // all compaction is done in a queue, to avoid attaching\n// too many listeners at once\n\n\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n\n      immediate(function () {\n        self._compactionQueue.shift();\n\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' + 'names cannot start with \\'_\\'';\n  }\n\n  return false;\n}\n\ninherits(AbstractPouchDB, EventEmitter);\n\nfunction AbstractPouchDB() {\n  EventEmitter.call(this); // re-bind prototyped methods\n\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post = adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n\n  this.bulkDocs({\n    docs: [doc]\n  }, opts, yankError(callback, doc._id));\n});\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n\n  invalidIdError(doc._id);\n\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n\n  var self = this;\n\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {\n        ok: true,\n        id: doc._id,\n        rev: doc._rev\n      };\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({\n        docs: [doc]\n      }, opts, yankError(next, doc._id));\n    }\n  }\n});\nAbstractPouchDB.prototype.putAttachment = adapterFun('putAttachment', function (docId, attachmentId, rev$$1, blob, type) {\n  var api = this;\n\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  } // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n\n  /* istanbul ignore if */\n\n\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n    // create new doc\n\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({\n        _id: docId\n      });\n    } else {\n      throw err;\n    }\n  });\n});\nAbstractPouchDB.prototype.removeAttachment = adapterFun('removeAttachment', function (docId, attachmentId, rev$$1, callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n\n\n    if (!obj._attachments) {\n      return callback();\n    }\n\n    delete obj._attachments[attachmentId];\n\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n\n    self.put(obj, callback);\n  });\n});\nAbstractPouchDB.prototype.remove = adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {\n    _id: doc._id,\n    _rev: doc._rev || opts.rev\n  };\n  newDoc._deleted = true;\n\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n\n  this.bulkDocs({\n    docs: [newDoc]\n  }, opts, yankError(callback, newDoc._id));\n});\nAbstractPouchDB.prototype.revsDiff = adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {\n        missing: []\n      });\n    }\n\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      var idx = missingForId.indexOf(rev$$1);\n\n      if (idx === -1) {\n        return;\n      }\n\n      missingForId.splice(idx, 1);\n      /* istanbul ignore if */\n\n      if (opts.status !== 'available') {\n        addToMissing(id, rev$$1);\n      }\n    }); // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {\n          missing: req[id]\n        });\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n}); // _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\n\nAbstractPouchDB.prototype.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n}); // compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\n\nAbstractPouchDB.prototype.compactDocument = adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n\n    self._doCompaction(docId, revs, callback);\n  });\n}); // compact the whole database using single document\n// compaction\n\nAbstractPouchDB.prototype.compact = adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n  self._compactionQueue = self._compactionQueue || [];\n\n  self._compactionQueue.push({\n    opts: opts,\n    callback: callback\n  });\n\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\n\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {\n        ok: true\n      });\n    }).catch(callback);\n  }\n\n  self.changes(changesOpts).on('change', onChange).on('complete', onComplete).on('error', callback);\n};\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\n\n\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n\n  var leaves = [],\n      self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n\n    if (!count) {\n      return cb(null, result);\n    } // order with open_revs is unspecified\n\n\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n\n          if (!existing) {\n            result.push({\n              ok: doc\n            });\n          }\n        } else {\n          result.push({\n            missing: leaf\n          });\n        }\n\n        count--;\n\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i]; // looks like it's the only thing couchdb checks\n\n          if (!(typeof l === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n\n      var revNo = parseInt(splittedRev[0], 10);\n      var revHash = splittedRev[1];\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) {\n          return x.id;\n        }).indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === revNo - 1;\n\n        if (hashFoundAtRevPos || !path && hashIndex !== -1) {\n          path = currentPath;\n        }\n      }\n      /* istanbul ignore if */\n\n\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n\n      var indexOfRev = path.ids.map(function (x) {\n        return x.id;\n      }).indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: path.pos + path.ids.length - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n\n      if (opts.revs_info) {\n        var pos = path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n\n      if (count === 0) {\n        return cb(null, doc);\n      }\n\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n\n          if (! --count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n\n      cb(null, doc);\n    }\n  });\n}); // TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\n\nAbstractPouchDB.prototype.getAttachment = adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n\n      self._getAttachment(docId, attachmentId, res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\nAbstractPouchDB.prototype.allDocs = adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n\n    var incompatibleOpt = ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR, 'Query parameter `' + incompatibleOpt + '` is not compatible with multi-get'));\n      return;\n    }\n\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n\n      if (opts.keys.length === 0) {\n        return this._allDocs({\n          limit: 0\n        }, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {}; // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n\n  opts.return_docs = 'return_docs' in opts ? opts.return_docs : !opts.live;\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    } // assume we know better than the adapter, unless it informs us\n\n\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n/* istanbul ignore next */\n\nAbstractPouchDB.prototype.type = function () {\n  return typeof this._type === 'function' ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs = adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs); // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    } // add ids for error/conflict responses (not required for CouchDB)\n\n\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\nAbstractPouchDB.prototype.registerDependentDatabase = adapterFun('registerDependentDatabase', function (dependentDb, callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n\n  upsert(this, '_local/_pouch_dependentDbs', diffFun).then(function () {\n    callback(null, {\n      db: depDB\n    });\n  }).catch(callback);\n});\nAbstractPouchDB.prototype.destroy = adapterFun('destroy', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || {\n        'ok': true\n      });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else {\n        // no dependencies\n        return destroyDb();\n      }\n    }\n\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n\n      /* istanbul ignore next */\n      var trueName = usePrefix ? name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n\n  if (this.failed) {\n    while (fun = this.queue.shift()) {\n      fun(this.failed);\n    }\n  } else {\n    while (fun = this.queue.shift()) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) {\n    // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i]; // check for browsers that have been upgraded from websql-only to websql+idb\n\n      /* istanbul ignore if */\n\n      if (adapterName === 'idb' && 'websql' in adapters && hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' + ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName]; // if adapter is invalid, then an error will be thrown later\n\n  var usePrefix = adapter && 'use_prefix' in adapter ? adapter.use_prefix : true;\n  return {\n    name: usePrefix ? prefix + name : name,\n    adapter: adapterName\n  };\n} // OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\n\n\nfunction prepareForDestruction(self) {\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\n\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] || !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n  self.adapter = opts.adapter;\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n\n    prepareForDestruction(self);\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n} // AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\n\n\nvar a = typeof AbortController !== 'undefined' ? AbortController : function () {\n  return {\n    abort: function () {}\n  };\n};\nvar f$1 = fetch;\nvar h = Headers;\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\nPouchDB.prefix = '_pouch_';\nvar eventEmitter = new EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EventEmitter.prototype).forEach(function (key) {\n    if (typeof EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  }); // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n\n    destructListeners.get(db.name).push(db);\n  });\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n\n    dbList.splice(pos, 1);\n\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed', true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') {\n    // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) {\n      // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  }); // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n}; // managed automatically by set-version.js\n\n\nvar version = \"7.2.1\"; // this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\n\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n\n    if (!value) {\n      break;\n    }\n  }\n\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n} // Converts a string in dot notation to an array of its components, with backslash escaping\n\n\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') {\n        // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else {\n        // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else {\n      // normal character\n      current += ch;\n    }\n  }\n\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\n\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n} // flatten an array of selectors joined by an $and operator\n\n\nfunction mergeAndedSelectors(selectors) {\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n\n      if (typeof matcher !== 'object') {\n        matcher = {\n          $eq: matcher\n        };\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n  return res;\n} // collapse logically equivalent gt/gte values\n\n\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) {\n        // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else {\n      // operator === '$gt'\n      if (value >= fieldMatchers.$gte) {\n        // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) {\n        // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else {\n      // operator === '$gt'\n      if (value > fieldMatchers.$gt) {\n        // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n} // collapse logically equivalent lt/lte values\n\n\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) {\n        // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else {\n      // operator === '$gt'\n      if (value <= fieldMatchers.$lte) {\n        // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) {\n        // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else {\n      // operator === '$gt'\n      if (value < fieldMatchers.$lt) {\n        // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n} // combine $ne values into one array\n\n\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else {\n    // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n} // add $eq into the mix\n\n\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n} //#7458: execute function mergeAndedSelectors on nested $and\n\n\nfunction mergeAndedSelectorsNested(obj) {\n  for (var prop in obj) {\n    if (Array.isArray(obj)) {\n      for (var i in obj) {\n        if (obj[i]['$and']) {\n          obj[i] = mergeAndedSelectors(obj[i]['$and']);\n        }\n      }\n    }\n\n    var value = obj[prop];\n\n    if (typeof value === 'object') {\n      mergeAndedSelectorsNested(value); // <- recursive call\n    }\n  }\n\n  return obj;\n} //#7458: determine id $and is present in selector (at any level)\n\n\nfunction isAndInSelector(obj, isAnd) {\n  for (var prop in obj) {\n    if (prop === '$and') {\n      isAnd = true;\n    }\n\n    var value = obj[prop];\n\n    if (typeof value === 'object') {\n      isAnd = isAndInSelector(value, isAnd); // <- recursive call\n    }\n  }\n\n  return isAnd;\n} //\n// normalize the selector\n//\n\n\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false; //#7458: if $and is present in selector (at any level) merge nested $and\n\n  if (isAndInSelector(result, false)) {\n    result = mergeAndedSelectorsNested(result);\n\n    if ('$and' in result) {\n      result = mergeAndedSelectors(result['$and']);\n    }\n\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {\n              $eq: matcher\n            };\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {\n        $eq: matcher\n      };\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\n\nvar MAGNITUDE_DIGITS = 3; // ditto\n\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n\n  if (ai - bi !== 0) {\n    return ai - bi;\n  }\n\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n\n    case 'boolean':\n      return a < b ? -1 : 1;\n\n    case 'string':\n      return stringCollate(a, b);\n  }\n\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n} // couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\n\n\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n\n      return key;\n\n    case 'object':\n      var origKey = key;\n\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n        /* istanbul ignore next */\n\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) {\n        // generic object\n        key = {};\n\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n\n  }\n\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n\n      case 'number':\n        return numToIndexableString(key);\n\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n\n        /* eslint-disable no-control-regex */\n        return key.replace(/\\u0002/g, '\\u0002\\u0002').replace(/\\u0001/g, '\\u0001\\u0002').replace(/\\u0000/g, '\\u0001\\u0001');\n\n      /* eslint-enable no-control-regex */\n\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) + toIndexableString(key[objKey]);\n          }\n        }\n\n        return result;\n    }\n  }\n\n  return '';\n} // convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\n\n\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n\n    if (neg) {\n      magnitude = -magnitude;\n    }\n\n    i += MAGNITUDE_DIGITS;\n\n    while (true) {\n      var ch = str[i];\n\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n\n      i++;\n    }\n\n    numAsString = numAsString.split('.');\n\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n\n\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n\n\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n\n  return {\n    num: num,\n    length: i - originalIdx\n  };\n} // move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\n\n\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) {\n      // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n\n  var i = 0;\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\n  while (true) {\n    var collationIndex = str[i++];\n\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\n        while (true) {\n          var ch = str[i];\n\n          if (ch === '\\u0000') {\n            break;\n          }\n\n          parsedStr += ch;\n          i++;\n        } // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n\n        /* eslint-disable no-control-regex */\n\n\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000').replace(/\\u0001\\u0002/g, '\\u0001').replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n\n        stack.push(parsedStr);\n        break;\n\n      case '5':\n        var arrayElement = {\n          element: [],\n          index: stack.length\n        };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n\n      case '6':\n        var objElement = {\n          element: {},\n          index: stack.length\n        };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n\n      /* istanbul ignore next */\n\n      default:\n        throw new Error('bad collationIndex or unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n\n  return a.length === b.length ? 0 : a.length > b.length ? 1 : -1;\n}\n\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return a === b ? 0 : a > b ? 1 : -1;\n}\n\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a),\n      bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n\n    if (sort !== 0) {\n      return sort;\n    } // if the keys are equal sort the values\n\n\n    sort = collate(a[ak[i]], b[bk[i]]);\n\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n\n  return ak.length === bk.length ? 0 : ak.length > bk.length ? 1 : -1;\n} // The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\n\n\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x); //false if -1 otherwise true, but fast!!!!1\n\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n\n    if (Array.isArray(x)) {\n      return 5;\n    }\n\n    return idx < 3 ? idx + 2 : idx + 3;\n  }\n  /* istanbul ignore next */\n\n\n  if (Array.isArray(x)) {\n    return 5;\n  }\n} // conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\n\n\nfunction numToIndexableString(num) {\n  if (num === 0) {\n    return '1';\n  } // convert number to exponential format for easier and\n  // more succinct string sorting\n\n\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n  var neg = num < 0;\n  var result = neg ? '0' : '2'; // first sort by magnitude\n  // it's easier if all magnitudes are positive\n\n  var magForComparison = (neg ? -magnitude : magnitude) - MIN_MAGNITUDE;\n  var magString = padLeft(magForComparison.toString(), '0', MAGNITUDE_DIGITS);\n  result += SEP + magString; // then sort by the factor\n\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n\n  /* istanbul ignore next */\n\n  if (neg) {\n    // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20); // strip zeros from the end\n\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n  result += SEP + factorStr;\n  return result;\n} // create a comparator based on the sort object\n\n\nfunction createFieldSorter(sort) {\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n\n    if (collation !== 0) {\n      return collation;\n    } // this is what mango seems to do\n\n\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n\n    if (typeof requestDef.sort[0] !== 'string' && getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  } // is matcher an object, if so continue recursion\n\n\n  if (typeof matcher === 'object') {\n    return Object.keys(matcher).every(function (userOperator) {\n      var userValue = matcher[userOperator];\n      return match(userOperator, doc, userValue, parsedField, docFieldValue);\n    });\n  } // no more depth, No need to recurse further\n\n\n  return matcher === docFieldValue;\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  } //`$nor`\n\n\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator + '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' + '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n\n    case 'boolean':\n      return typeof docFieldValue === 'boolean';\n\n    case 'number':\n      return typeof docFieldValue === 'number';\n\n    case 'string':\n      return typeof docFieldValue === 'string';\n\n    case 'array':\n      return docFieldValue instanceof Array;\n\n    case 'object':\n      return {}.toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' + 'Please use one of object, string, array, number, boolean or null.');\n}\n\nvar matchers = {\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n    /* istanbul ignore next */\n\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n}; // return true if the given doc matches the supplied selector\n\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n  var rowsMatched = filterInMemoryFields([row], {\n    'selector': selector\n  }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = ['return function(doc) {', '  \"use strict\";', '  var emitted = false;', '  var emit = function (a, b) {', '    emitted = true;', '  };', '  var view = ' + input + ';', '  view(doc);', '  if (emitted) {', '    return true;', '  }', '};'].join('\\n');\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ? opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' && !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST, '`view` filter parameter not found or invalid.');\n      return callback(err);\n    } // fetch a view from a design doc, make it behave like a filter\n\n\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {\n          status: 'cancelled'\n        });\n      }\n      /* istanbul ignore next */\n\n\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] && ddoc.views[viewName[1]].map;\n\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC, ddoc.views ? 'missing json key: ' + viewName[1] : 'missing json key: views'));\n      }\n\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {\n          status: 'cancelled'\n        });\n      }\n      /* istanbul ignore next */\n\n\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC, ddoc && ddoc.filters ? 'missing json key: ' + filterName[1] : 'missing json key: filters'));\n      }\n\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n} // TODO: remove from pouchdb-core (breaking)\n\n\nPouchDB.plugin(applyChangesFilterPlugin);\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n} // List of top level reserved words for doc\n\n\nvar reservedWords = toObject(['_id', '_rev', '_attachments', '_deleted', '_revisions', '_revs_info', '_conflicts', '_deleted_conflicts', '_local_seq', '_rev_tree', //replication documents\n'_replication_id', '_replication_state', '_replication_state_time', '_replication_state_reason', '_replication_stats', // Specific to Couchbase Sync Gateway\n'_removed']); // List of reserved words that should end up the document\n\nvar dataWords = toObject(['_attachments', //replication documents\n'_replication_id', '_replication_state', '_replication_state_time', '_replication_state_reason', '_replication_stats']);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-/.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {\n      status: 'missing'\n    }, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n} // Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\n\n\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {\n    status: 'available'\n  };\n\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n\n    newRevId = rev(doc, dbOpts.deterministic_revs);\n\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n\n      if (revInfo.error) {\n        return revInfo;\n      }\n\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {\n          status: 'missing'\n        }, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids: [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n\n      if (revInfo.error) {\n        return revInfo;\n      }\n\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n  doc._rev = nRevNum + '-' + newRevId;\n  var result = {\n    metadata: {},\n    data: {}\n  };\n\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG, 'Attachment is not a valid base64 string');\n    return {\n      error: err\n    };\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else {\n    // binary\n    att.data = asBinary;\n  }\n\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5; // size is for blobs (browser), length is for buffers (node)\n\n    att.length = att.data.size || att.data.length || 0;\n\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n\n  if (typeof att.data === 'string') {\n    // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else {\n    // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ? Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key], blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results, i, cb, writeDoc, newEdits) {\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  } // sometimes this is pre-calculated. historically not always\n\n\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted : isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted : isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n  var inConflict = newEdits && (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf' || !previouslyDeleted && merged.conflicts !== 'new_leaf' || previouslyDeleted && !deleted && merged.conflicts === 'new_branch');\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  } // recalculate\n\n\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1); // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n\n  var delta = previouslyDeleted === winningRevIsDeleted ? 0 : previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n  var newRevIsDeleted;\n\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted, true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results, writeDoc, opts, overallCallback) {\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    } // 4712 - detect whether a new document was inserted with a _rev\n\n\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false, delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {\n        ctx: tx\n      }, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  }); // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results, resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n\n    nextDoc();\n  });\n} // IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\n\n\nvar ADAPTER_VERSION = 5; // The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\n\nvar DOC_STORE = 'document-store'; // BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\n\nvar BY_SEQ_STORE = 'by-sequence'; // Where we store attachments\n\nvar ATTACH_STORE = 'attach-store'; // Where we store many-to-many relations\n// between attachment digests and seqs\n\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store'; // Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\n\nvar META_STORE = 'meta-store'; // Where we store local documents\n\nvar LOCAL_STORE = 'local-store'; // Where we detect blob support\n\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n} // Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\n\n\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq,\n    // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n} // read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\n\n\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n} // Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\n\n\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {\n        type: type\n      }));\n    } else if (typeof body !== 'string') {\n      // we have blob support\n      callback(body);\n    } else {\n      // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else {\n    // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') {\n      // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else {\n      // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n\n  if (!attachments.length) {\n    return cb && cb();\n  }\n\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n} // IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\n\n\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n\n        if (!('body' in attObj)) {\n          // already processed\n          return;\n        }\n\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(pick(attObj, ['digest', 'content_type']), {\n              data: data\n            });\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n\n    if (!count) {\n      // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(IDBKeyRange.bound(digest + '::', digest + '::\\uffff', false, false));\n\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n\n      seqStore.delete(seq);\n      var cursor = attAndSeqStore.index('seq').openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else {\n          // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n\n    startTransaction();\n  });\n\n  function startTransaction() {\n    var stores = [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE, LOCAL_STORE, ATTACH_AND_SEQ_STORE, META_STORE];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    } // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n\n\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n\n        continue;\n      }\n\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var req = attachStore.get(digest);\n\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB, 'unknown stub attachment with digest ' + digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n\n    if (!digests.length) {\n      return finish();\n    }\n\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted, isUpdate, delta, resultsIdx, callback) {\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments && Object.keys(doc._attachments).length;\n\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback) {\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result; // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1, winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n\n      e.stopPropagation(); // avoid transaction onerror\n\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback) {\n    var doc = docInfo.data;\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  } // map seqs to attachment digests, which\n  // we will need later during compaction\n\n\n  function insertAttachmentMappings(docInfo, seq, callback) {\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n      req.onsuccess = checkDone;\n\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n\n        e.stopPropagation(); // avoid transaction onerror\n\n        checkDone();\n      };\n    }\n\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var getKeyReq = attachStore.count(digest);\n\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n\n      if (count) {\n        return callback(); // already exists\n      }\n\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n} // Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\n\n\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n  if (batchSize === -1) {\n    batchSize = 1000;\n  } // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n\n  var useGetAll = typeof objectStore.getAll === 'function' && typeof objectStore.getAllKeys === 'function' && batchSize > 1 && !descending;\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) {\n      // no more results\n      return onBatch();\n    } // fetch next batch, exclusive start\n\n\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper, true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n\n    if (!cursor) {\n      // done\n      return onBatch();\n    } // regular IDBCursor acts like a batch where batch size is always 1\n\n\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\n      \"continue\": continuePseudoCursor\n    };\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n} // simple shim for objectStore.getAll(), falling back to IDBCursor\n\n\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  } // fall back to cursors\n\n\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {\n          key: key,\n          error: 'not_found'\n        };\n      }\n\n      count++;\n\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {\n      error: e\n    };\n  }\n\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false;\n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n  var keyRange;\n  var keyRangeError;\n\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n\n    if (keyRangeError && !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR, keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n  /* istanbul ignore if */\n\n\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) {\n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      }\n\n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  } // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n\n\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n\n    docIdRevIndex.get(key).onsuccess = function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n\n    if (deleted) {\n      if (keys) {\n        results.push(row); // deleted docs are okay with \"keys\" requests\n\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n\n      var batchValue = batchValues[i];\n\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n\n    processBatch(batchValues);\n\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n\n    if (opts.descending) {\n      values = values.reverse();\n    }\n\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    /* istanbul ignore if */\n\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  } // don't bother doing any requests if start > end or limit === 0\n\n\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n\n  if (limit === -1) {\n    // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  } // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n\n\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n} //\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n\n\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//); // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\n      resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n} // This task queue ensures that IDB open calls are done in their own tick\n\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      immediate(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n  var limit = 'limit' in opts ? opts.limit : -1;\n\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) {\n      // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n      var filtered = filter(change);\n\n      if (typeof filtered === 'object') {\n        // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n\n      if (!filtered) {\n        return Promise.resolve();\n      }\n\n      numResults++;\n\n      if (opts.return_docs) {\n        results.push(change);\n      } // process the attachment immediately\n      // for the benefit of live listeners\n\n\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n\n    function onBatchDone() {\n      var promises = [];\n\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n\n        var winningDoc = winningDocs[i];\n\n        if (!winningDoc) {\n          continue;\n        }\n\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    } // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n\n\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    } // fetch winning doc in separate request\n\n\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n\n    if (metadata) {\n      // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    } // metadata not cached, have to go fetch it\n\n\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n  var keyRange = opts.since && !opts.descending ? IDBKeyRange.lowerBound(opts.since, true) : null;\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n  var dbName = opts.name;\n  var idb = null;\n  api._meta = null; // called when creating a fresh new database\n\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {\n      keyPath: 'id'\n    });\n    db.createObjectStore(BY_SEQ_STORE, {\n      autoIncrement: true\n    }).createIndex('_doc_id_rev', '_doc_id_rev', {\n      unique: true\n    });\n    db.createObjectStore(ATTACH_STORE, {\n      keyPath: 'digest'\n    });\n    db.createObjectStore(META_STORE, {\n      keyPath: 'id',\n      autoIncrement: false\n    });\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE); // added in v2\n\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {\n      unique: false\n    }); // added in v3\n\n    db.createObjectStore(LOCAL_STORE, {\n      keyPath: '_id'\n    }); // added in v4\n\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE, {\n      autoIncrement: true\n    });\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {\n      unique: true\n    });\n  } // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n\n\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {\n      unique: false\n    });\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  } // migration to version 3 (part 1)\n\n\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {\n      keyPath: '_id'\n    }).createIndex('_doc_id_rev', '_doc_id_rev', {\n      unique: true\n    });\n  } // migration to version 3 (part 2)\n\n\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var cursor = docStore.openCursor();\n\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1; // remove all seq entries\n          // associated with this docId\n\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  } // migration to version 4 (part 1)\n\n\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE, {\n      autoIncrement: true\n    });\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {\n      unique: true\n    });\n  } // migration to version 4 (part 2)\n\n\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE); // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n\n    var req = attStore.count();\n\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n\n        if (!cursor) {\n          return callback(); // done\n        }\n\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n\n        var digests = Object.keys(digestMap);\n\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n\n        cursor.continue();\n      };\n    };\n  } // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n\n\n  function migrateMetadata(txn) {\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n\n      return decodeMetadata(storedObject);\n    } // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n\n\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n\n      if (!cursor) {\n        return; // done\n      }\n\n      var metadata = decodeMetadataCompat(cursor.value);\n      metadata.winningRev = metadata.winningRev || winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(IDBKeyRange.bound(start, end));\n        var metadataSeq = 0;\n\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n\n          var seq = cursor.primaryKey;\n\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata, metadata.winningRev, metadata.deleted);\n        var req = docStore.put(metadataToStore);\n\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n  }\n\n  api._remote = false;\n\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  }; // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n\n\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb, [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {\n        doc: doc,\n        metadata: metadata,\n        ctx: txn\n      });\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result); // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb, [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n\n      txn = txnResult.txn;\n    }\n\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n\n    var txn = txnResult.txn;\n\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: api._meta.blobSupport ? 'binary' : 'base64'\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  }; // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n\n\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE, ATTACH_AND_SEQ_STORE];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n\n    var txn = txnResult.txn;\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos, revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n\n    txn.onabort = idbError(callback);\n\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n    req.onerror = idbError(callback);\n\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    delete doc._revisions; // ignore this, trust the rev\n\n    var oldRev = doc._rev;\n    var id = doc._id;\n\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n\n    if (oldRev) {\n      req = oStore.get(id);\n\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else {\n          // update\n          var req = oStore.put(doc);\n\n          req.onsuccess = function () {\n            ret = {\n              ok: true,\n              id: doc._id,\n              rev: doc._rev\n            };\n\n            if (opts.ctx) {\n              // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else {\n      // new doc\n      req = oStore.add(doc);\n\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n\n        e.stopPropagation(); // avoid transaction onerror\n      };\n\n      req.onsuccess = function () {\n        ret = {\n          ok: true,\n          id: doc._id,\n          rev: doc._rev\n        };\n\n        if (opts.ctx) {\n          // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    var tx = opts.ctx;\n\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n\n      tx = txnResult.txn;\n\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n    req.onerror = idbError(callback);\n\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {\n          ok: true,\n          id: id,\n          rev: '0-0'\n        };\n\n        if (opts.ctx) {\n          // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName); //Close open request for \"dbName\" database to fix ie delay.\n\n    var openReq = openReqList.get(dbName);\n\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n\n      if (hasLocalStorage() && dbName in localStorage) {\n        delete localStorage[dbName];\n      }\n\n      callback(null, {\n        'ok': true\n      });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return immediate(function () {\n      callback(null, api);\n    });\n  }\n\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    } // do migrations\n\n\n    var txn = e.currentTarget.transaction; // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [addDeletedOrLocalIndex, // v1 -> v2\n    migrateLocalStore, // v2 -> v3\n    migrateAttsAndSeqs, // v3 -> v4\n    migrateMetadata // v4 -> v5\n    ];\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    }; // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n\n    var txn = idb.transaction([META_STORE, DETECT_BLOB_SUPPORT_STORE, DOC_STORE], 'readwrite');\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n\n      var instanceKey = dbName + '_id';\n\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    } //\n    // fetch or generate the instanceId\n    //\n\n\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || {\n        id: META_STORE\n      };\n      storeMetaDocIfReady();\n    }; //\n    // countDocs\n    //\n\n\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    }); //\n    // check blob support\n    //\n\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    }); // only when the metadata put transaction has completed,\n    // consider the setup done\n\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function (e) {\n    var msg = e.target.error && e.target.error.message;\n\n    if (!msg) {\n      msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    } else if (msg.indexOf(\"stored database is a higher version\") !== -1) {\n      msg = new Error('This DB was created with the newer \"indexeddb\" adapter, but you are trying to open it with the older \"idb\" adapter');\n    }\n\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction IDBPouch(PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n} // dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n    /* istanbul ignore next */\n\n\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc && doc._attachments;\n\n  if (!atts) {\n    return;\n  }\n\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n} // Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\n\n\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length); // Ensure prefix has a trailing slash\n\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n\n  var uri = parseUri(name);\n\n  if (uri.user || uri.password) {\n    uri.auth = {\n      username: uri.user,\n      password: uri.password\n    };\n  } // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n\n\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n  uri.db = parts.pop(); // Prevent double encoding of URI component\n\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  uri.path = parts.join('/');\n  return uri;\n} // Generate a URL with the host data given by opts and the given path\n\n\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n} // Generate a URL with the host data given by opts and the given path\n\n\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/'; // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n\n  return opts.protocol + '://' + opts.host + (opts.port ? ':' + opts.port : '') + '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\nfunction shouldCacheBust(opts) {\n  var ua = typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n} // Implements the PouchDB API for dealing with CouchDB instances over HTTP\n\n\nfunction HttpPouch(opts, callback) {\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n  opts = clone(opts);\n\n  var ourFetch = function (url, options) {\n    options = options || {};\n    options.headers = options.headers || new h();\n    options.credentials = 'include';\n\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n    /* istanbul ignore if */\n\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n\n  function fetchJSON(url, options, callback) {\n    var result = {};\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n\n  var setupPromise;\n\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    } // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n\n\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {\n          method: 'PUT'\n        });\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n\n      return Promise.reject(err);\n    });\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n    return setupPromise;\n  }\n\n  immediate(function () {\n    callback(null, api);\n  });\n  api._remote = true;\n  /* istanbul ignore next */\n\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).catch(function () {\n      return {};\n    }).then(function (result) {\n      // Bad response or missing `uuid` should not prevent ID generation.\n      var uuid$$1 = result && result.uuid ? result.uuid + host.db : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  }); // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = clone(opts);\n    fetchJSON(genDBUrl(host, '_compact'), {\n      method: 'POST'\n    }).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {\n              ok: true\n            });\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      } // Ping the http if it's finished compaction\n\n\n      ping();\n    });\n  });\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n\n      if (opts.revs) {\n        params.revs = true;\n      }\n\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n\n      if (opts.latest) {\n        params.latest = true;\n      }\n\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({\n          docs: opts.docs\n        })\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n\n        cb(null, result.data);\n      }).catch(cb);\n    }\n    /* istanbul ignore next */\n\n\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n\n          if (++numDone === numBatches) {\n            callback(null, {\n              results: flatten(results)\n            });\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize, Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    } // mark the whole database as either supporting or not supporting _bulk_get\n\n\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n    /* istanbul ignore next */\n\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(err.status, 'PouchDB is just detecting if the remote ' + 'supports the _bulk_get API.');\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  }); // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      var url = path.substring(0, 1) === '/' ? genUrl(host, path.substring(1)) : genDBUrl(host, path);\n      return ourFetch(url, options);\n    });\n  }; // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n\n\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = clone(opts); // List of parameters to add to the GET request\n\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n    /* istanbul ignore if */\n\n\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n\n      if (!atts || !filenames.length) {\n        return;\n      } // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n\n\n      function fetchData(filename) {\n        var att = atts[filename];\n\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) + '?rev=' + doc._rev;\n\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if ('buffer' in response) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n\n            if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n              blob.type = att.content_type;\n            }\n\n            return blob;\n          }\n\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      }); // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n\n      return fetchAttachments(docOrDocs);\n    }\n\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  }); // Delete the document given by doc from the database given by host.\n\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = doc._rev || opts.rev;\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1;\n    fetchJSON(url, {\n      method: 'DELETE'\n    }, cb).catch(cb);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  } // Get the attachment\n\n\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    var params = opts.rev ? '?rev=' + opts.rev : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' + encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {\n      method: 'GET'\n    }).then(function (response) {\n      contentType = response.headers.get('content-type');\n\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser && typeof response.buffer === 'function') {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        blob.type = contentType;\n      }\n\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  }); // Remove the attachment given by the id and rev\n\n  api.removeAttachment = adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1, callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n    fetchJSON(url, {\n      method: 'DELETE'\n    }, callback).catch(callback);\n  }); // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob, type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG, 'Attachment is not a valid base64 string'));\n      }\n\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    } // Add the attachment\n\n\n    fetchJSON(url, {\n      headers: new h({\n        'Content-Type': type\n      }),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  }); // Update/create multiple documents given by req in the database\n  // given by host.\n\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  }; // Update/create document\n\n\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  }; // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n\n\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = clone(opts); // List of parameters to add to the GET request\n\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n    /* istanbul ignore if */\n\n\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    } // added in CouchDB 1.6.0\n\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {\n        keys: opts.keys\n      };\n    }\n\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n      method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n\n      callback(null, result.data);\n    }).catch(callback);\n  }); // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n\n  api._changes = function (opts) {\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = 'timeout' in opts ? opts.timeout : 30 * 1000; // ensure CHANGES_TIMEOUT_BUFFER applies\n\n    if ('timeout' in opts && opts.timeout && requestTimeout - opts.timeout < CHANGES_TIMEOUT_BUFFER) {\n      requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n    /* istanbul ignore if */\n\n\n    if ('heartbeat' in opts && opts.heartbeat && requestTimeout - opts.heartbeat < CHANGES_TIMEOUT_BUFFER) {\n      requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = typeof opts.limit !== 'undefined' ? opts.limit : false;\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n    /* istanbul ignore if */\n\n\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    } // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n\n\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {\n        doc_ids: opts.doc_ids\n      };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n        // set this automagically for the user, similar to above\n        params.filter = '_selector';\n        method = 'POST';\n        body = {\n          selector: opts.selector\n        };\n      }\n\n    var controller = new a();\n    var lastFetchedSeq; // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n\n      params.since = since; // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n\n      /* istanbul ignore next */\n\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = !limit || leftToFetch > batchSize ? batchSize : leftToFetch;\n      } // Set the options for the ajax call\n\n\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n      /* istanbul ignore if */\n\n      if (opts.aborted) {\n        return;\n      } // Get the changes\n\n\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    }; // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n\n\n    var results = {\n      results: []\n    };\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n\n      var raw_results_length = 0; // If the result of the ajax call (res) contains changes (res.results)\n\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null; // Attach 'pending' property if server supports it (CouchDB 2.0+)\n\n        /* istanbul ignore if */\n\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        } // For each change\n\n\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n\n            opts.onChange(c, pending, lastSeq);\n          }\n\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      } // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n\n\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = limit && leftToFetch <= 0 || res && raw_results_length < batchSize || opts.descending;\n\n      if (opts.continuous && !(limit && leftToFetch <= 0) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        immediate(function () {\n          fetchData(lastFetchedSeq, fetched);\n        });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetchData(opts.since || 0, fetched); // Return a method to cancel this method from processing any more\n\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  }; // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n\n\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    } // Get the missing document/revision IDs\n\n\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {\n      method: 'DELETE'\n    }).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {\n          ok: true\n        });\n      } else {\n        callback(err);\n      }\n    });\n  };\n} // HttpPouch is a valid adapter.\n\n\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1(PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      immediate(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      immediate(function () {\n        callback(reason);\n      });\n    });\n  }\n\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n\n    return promise;\n  });\n} // Promise finally util similar to Q.finally\n\n\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n} // uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\n\n\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name + ' function requires map values to be numbers' + ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else {\n        // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else {\n      // add number to array\n      result[0] += num;\n    }\n  }\n\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\"return (\" + func.replace(/;\\s*$/, \"\") + \");\", {\n    emit: emit,\n    sum: sum,\n    log: log,\n    isArray: isArray,\n    toJSON: toJSON\n  });\n}\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {\n    fulfill();\n  });\n}\n\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {// just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\n\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  } // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n\n\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n/* create a string signature for a view so we can cache it and uniq it */\n\n\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n  var cachedViews;\n\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n    var depDbName = info.db_name + '-mrview-' + (temporary ? 'temp' : stringMd5(viewSignature)); // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n\n      depDbs[depDbName] = true;\n      return doc;\n    }\n\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error', 'The user\\'s map/reduce function threw an uncaught error.\\n' + 'You can debug this error by doing:\\n' + 'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' + 'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\n\n\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {\n        output: fun(keys, values, rereduce)\n      };\n    } catch (e) {\n      emitError(db, e);\n      return {\n        error: e\n      };\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value; // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n\n    var docId = val && typeof val === 'object' && val._id || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n\n      if (!atts) {\n        return;\n      }\n\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate); // prevents e.g. '1foo' or '1.1' being coerced to 1\n\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return new QueryParseError('Invalid value for integer: \"' + number + '\"');\n      }\n\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' + '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' && typeof options[endkeyName] !== 'undefined' && collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' + 'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 && !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' + '{group: true}');\n      }\n    }\n\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status; // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params); // Format the list of parameters into a valid URI query string\n\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params; // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000; // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString = 'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n\n        if (typeof fun === 'string') {\n          body = {\n            keys: opts.keys\n          };\n        } else {\n          // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    } // We are referencing a query defined in the design doc\n\n\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({\n          'Content-Type': 'application/json'\n        }),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        } // fail the entire request if the result contains an error\n\n\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    } // We are using a temporary view, terrible for performance, good for testing\n\n\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.fetch('_temp_view' + params, {\n      headers: new h({\n        'Content-Type': 'application/json'\n      }),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n      ok = response.ok;\n      status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n\n      return result;\n    }).then(postprocessAttachments(opts));\n  } // custom adapters can define their own api._query\n  // and override the default behavior\n\n  /* istanbul ignore next */\n\n\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(res);\n      });\n    });\n  } // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n\n  /* istanbul ignore next */\n\n\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  } // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n\n\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {\n      _id: metaDocId,\n      keys: []\n    };\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({\n          rows: []\n        });\n      }\n\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n\n        if (!doc) {\n          // deleted\n          continue;\n        }\n\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  } // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n\n\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId).catch(defaultsTo({\n      _id: seqDocId,\n      seq: 0\n    })).then(function (lastSeqDoc) {\n      var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n      return Promise.all(docIds.map(function (docId) {\n        return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n      })).then(function (listOfDocsToPersist) {\n        var docsToPersist = flatten(listOfDocsToPersist);\n        lastSeqDoc.seq = seq;\n        docsToPersist.push(lastSeqDoc); // write all docs in a single operation, update the seq once\n\n        return view.db.bulkDocs({\n          docs: docsToPersist\n        });\n      });\n    });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {\n        id: doc._id,\n        key: normalizeKey(key)\n      }; // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$1();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n\n      if (!results.length) {\n        return;\n      }\n\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n\n          mapResults.sort(sortByKeyThenValue);\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [indexableKeysToKeyValues, change.changes]);\n        }\n\n        currentSeq = change.seq;\n      }\n\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n    var reduceFun = reducer(view.reduceFun);\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY : options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null; // only set group_level for array keys\n\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    } // no total_rows/offset when reducing\n\n\n    return {\n      rows: sliceResults(results, options.limit, options.skip)\n    };\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' && result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort(); // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n\n            var expectedKeys = ['id', 'key', 'value'];\n\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: 'value' in result.doc ? result.doc.value : null\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n\n\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey: toIndexableString([key]),\n          endkey: toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else {\n      // normal query, no 'keys'\n      var viewOpts = {\n        descending: opts.descending\n      };\n      /* istanbul ignore if */\n\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n\n      var startkey;\n      var endkey;\n\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ? toIndexableString([startkey, {}]) : toIndexableString([startkey]);\n      }\n\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n\n        viewOpts.skip = skip;\n      }\n\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({\n        'Content-Type': 'application/json'\n      }),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n\n        views.add(viewName);\n      });\n      var opts = {\n        keys: mapToKeysArray(docsToViews),\n        include_docs: true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]); // design doc deleted, or view function nonexistent\n\n            var statusIsGood = row.doc && row.doc.views && row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] = viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(function (viewDBName) {\n          return !viewsToStatus[viewDBName];\n        });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {\n            ok: true\n          };\n        });\n      });\n    }, defaultsTo({\n      ok: true\n    }));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n        /* sourceDB */\n        db,\n        /* viewName */\n        'temp_view/temp_view',\n        /* mapFun */\n        fun.map,\n        /* reduceFun */\n        fun.reduce,\n        /* temporary */\n        true,\n        /* localDocName */\n        localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' + viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n        var createViewPromise = createView(\n        /* sourceDB */\n        db,\n        /* viewName */\n        fullViewName,\n        /* mapFun */\n        fun.map,\n        /* reduceFun */\n        fun.reduce,\n        /* temporary */\n        false,\n        /* localDocName */\n        localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              immediate(function () {\n                updateView(view);\n              });\n            }\n\n            return queryView(view, opts);\n          } else {\n            // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {\n        map: fun\n      };\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n\n    return localViewCleanup(db);\n  });\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n  _count: function (keys, values) {\n    return values.length;\n  },\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += num * num;\n      }\n\n      return _sumsqr;\n    }\n\n    return {\n      sum: sum(values),\n      min: Math.min.apply(null, values),\n      max: Math.max.apply(null, values),\n      count: values.length,\n      sumsqr: sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' + viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments || !localDoc._attachments[filename] || localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {\n      rev: doc._rev\n    });\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n} //\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\n\n\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) {\n      // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {\n            var filenames = Object.keys(remoteDoc._attachments);\n            attachments.forEach(function (attachment, i) {\n              var att = remoteDoc._attachments[filenames[i]];\n              delete att.stub;\n              delete att.length;\n              att.data = attachment;\n            });\n            return remoteDoc;\n          });\n        }));\n      })).then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) || hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        } // strip _conflicts array to appease CSG (#5793)\n\n        /* istanbul ignore if */\n\n\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        } // the doc we got back from allDocs() is sufficient\n\n\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return {\n      ok: ok,\n      docs: resultDocs\n    };\n  }\n\n  return Promise.resolve().then(getRevisionOneDocs).then(getAllDocs).then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\"; // This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\n\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(404, 'PouchDB is just checking if a remote checkpoint exists.');\n      }\n\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    } // if the checkpoint has not changed, do not update\n\n\n    if (doc.last_seq === checkpoint) {\n      return;\n    } // Filter out current entry for this replication\n\n\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    }); // Add the latest checkpoint to history\n\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    }); // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint, session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint, session, this.returnValue).catch(function (err) {\n      if (isForbiddenError(err)) {\n        self.opts.writeSourceCheckpoint = false;\n        return true;\n      }\n\n      throw err;\n    });\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n\n\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n\n\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n\n\n          return LOWEST_SEQ;\n        });\n      }\n\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n\n    return LOWEST_SEQ;\n  });\n}; // This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n\n\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n\n  returnValue.emit('requestError', error);\n\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n} // Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\n\n\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName = '';\n  var selector = ''; // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n\n  /* istanbul ignore if */\n\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName + queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = []; // list of batches to be processed\n\n  var currentBatch; // the batch currently being processed\n\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n\n  var writingCheckpoint = false; // true while checkpoint is being written\n\n  var changesCompleted = false; // true when all changes received\n\n  var replicationCompleted = false; // true when replication has completed\n\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false; // true while src.changes is running\n\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = []; // Like couchdb, every replication gets a unique session id\n\n  var session = uuid();\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n      var checkpointOpts = {};\n\n      if (opts.checkpoint === false) {\n        checkpointOpts = {\n          writeSourceCheckpoint: false,\n          writeTargetCheckpoint: false\n        };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = {\n          writeSourceCheckpoint: true,\n          writeTargetCheckpoint: false\n        };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = {\n          writeSourceCheckpoint: false,\n          writeTargetCheckpoint: true\n        };\n      } else {\n        checkpointOpts = {\n          writeSourceCheckpoint: true,\n          writeTargetCheckpoint: true\n        };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n\n    var docs = currentBatch.docs;\n    var bulkOpts = {\n      timeout: opts.timeout\n    };\n    return target.bulkDocs({\n      docs: docs,\n      new_edits: false\n    }, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      } // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n\n\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n\n        if (error) {\n          result.errors.push(error); // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n\n          var errorName = (error.name || '').toLowerCase();\n\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n\n    if (changedDocs.length) {\n      outResult.docs = changedDocs; // Attach 'pending' property if server supports it (CouchDB 2.0+)\n\n      /* istanbul ignore if */\n\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n\n      returnValue.emit('change', outResult);\n    }\n\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq, session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      } // currentBatch.diffs elements are deleted as the documents are written\n\n\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n\n    currentBatch = batches.shift();\n    getDiffs().then(getBatchDocs).then(writeDocs).then(finishBatch).then(startNextBatch).catch(function (err) {\n      abortReplication('batch processing terminated with error', err);\n    });\n  }\n\n  function processPendingBatch(immediate$$1) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if (continuous && changesOpts.live || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n\n      return;\n    }\n\n    if (immediate$$1 || changesCompleted || pendingBatch.changes.length >= batch_size) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n\n      startNextBatch();\n    }\n  }\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n\n    if (!err.message) {\n      err.message = reason;\n    }\n\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n\n\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result; // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n\n      var errorName = (fatalError.name || '').toLowerCase();\n\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    } // Attach 'pending' property if server supports it (CouchDB 2.0+)\n\n    /* istanbul ignore if */\n\n\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n\n    if (!filter) {\n      return;\n    }\n\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    immediate(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n\n    if (returnValue.cancelled) {\n      return completeReplication();\n    } // if no results were returned then we're done,\n    // else fetch more\n\n\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n\n        processPendingBatch(true);\n      }; // update the checkpoint so we start from the right seq next time\n\n\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq, session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        }).catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    abortReplication('changes rejected', err);\n  }\n\n  function getChanges() {\n    if (!(!changesPending && !changesCompleted && batches.length < batches_limit)) {\n      return;\n    }\n\n    changesPending = true;\n\n    function abortChanges() {\n      changes.cancel();\n    }\n\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) {\n      // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n\n      returnValue._changes.cancel();\n    }\n\n    returnValue.once('cancel', abortChanges);\n    var changes = src.changes(changesOpts).on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete).catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n\n        };\n\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else {\n            // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n  /* istanbul ignore next */\n\n\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n  /* istanbul ignore if */\n\n\n  if (returnValue.cancelled) {\n    // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n} // We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\n\n\ninherits(Replication, EventEmitter);\n\nfunction Replication() {\n  EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  }; // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n\n\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n\n  if (self._readyCalled) {\n    return;\n  }\n\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST, \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = 'retry' in opts ? opts.retry : false;\n  /*jshint validthis:true */\n\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EventEmitter);\n\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  opts = clone(opts);\n  /*jshint validthis:true */\n\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) {\n    // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' && (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' && (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' && (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' && (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n\n        removed[event][type] = true;\n\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n  var promise = Promise.all([this.push, this.pull]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n\n    if (callback) {\n      callback(null, out);\n    }\n\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n\n    self.removeAllListeners();\n\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch).plugin(HttpPouch$1).plugin(mapreduce).plugin(replication); // Pull from src because pouchdb-node/pouchdb-browser themselves\n\nexport default PouchDB;","map":{"version":3,"sources":["/home/x/Code/PWA/node_modules/pouchdb/lib/index-browser.es.js"],"names":["immediate","uuidV4","Md5","vuvuzela","getArguments","inherits","EventEmitter","mangle","key","unmangle","substring","Map$1","_store","prototype","get","mangled","set","value","has","delete","res","forEach","cb","keys","Object","i","len","length","defineProperty","Set$1","array","Array","isArray","add","size","supportsMapAndSet","Symbol","Map","Set","prop","getOwnPropertyDescriptor","species","ExportedSet","ExportedMap","isBinaryObject","object","ArrayBuffer","Blob","cloneArrayBuffer","buff","slice","target","byteLength","targetArray","Uint8Array","sourceArray","cloneBinaryObject","type","webkitSlice","funcToString","Function","toString","objectCtorString","call","isPlainObject","proto","getPrototypeOf","Ctor","constructor","clone","newObject","Date","toISOString","hasOwnProperty","once","fun","called","args","Error","apply","toPromise","func","self","usedCB","pop","promise","Promise","fulfill","reject","resp","callback","err","mesg","push","then","e","result","logApiCall","name","listeners","logArgs","emit","origCallback","responseArgs","concat","adapterFun","_closed","_destroyed","taskqueue","isReady","addTask","failed","pick","obj","arr","MAX_NUM_CONCURRENT_REQUESTS","identityFunction","x","formatResultForOpenRevsGet","ok","bulkGet","db","opts","requests","docs","requestsById","request","id","numDocs","numDone","perDocResults","collapseResultsAndFinish","results","info","checkDone","gotResult","docIndex","allRequests","nextBatch","upTo","Math","min","batch","processBatch","offset","docId","j","docIdx","docRequests","docOpts","open_revs","map","rev","filter","formatResult","param","error","hasLocal","localStorage","setItem","getItem","hasLocalStorage","Changes","attachBrowserEvents","addEventListener","_listeners","addListener","dbName","inprogress","eventFunction","changesOpts","onError","changes","on","c","seq","since","cancelled","onChange","removeListener","notifyLocalWindows","notify","guardedConsole","method","console","arguments","randomNumber","max","maxTimeout","parseInt","ratio","random","range","defaultBackOff","explainError","status","str","assign","to","index","nextSource","nextKey","$inject_Object_assign","PouchError","reason","message","JSON","stringify","UNAUTHORIZED","MISSING_BULK_DOCS","MISSING_DOC","REV_CONFLICT","INVALID_ID","MISSING_ID","RESERVED_ID","NOT_OPEN","UNKNOWN_ERROR","BAD_ARG","INVALID_REQUEST","QUERY_PARSE_ERROR","DOC_VALIDATION","BAD_REQUEST","NOT_AN_OBJECT","DB_MISSING","IDB_ERROR","WSQ_ERROR","LDB_ERROR","FORBIDDEN","INVALID_REV","FILE_EXISTS","MISSING_STUB","INVALID_URL","createError","CustomPouchError","p","undefined","generateErrorFromResponse","data","tryFilter","doc","req","msg","filterChange","hasFilter","query","query_params","change","filterReturn","include_docs","attachments","att","_attachments","stub","flatten","arrs","invalidIdError","test","isRemote","_remote","listenerCount","ee","parseDesignDocFunctionName","s","parts","split","normalizeDesignDocFunctionName","normalized","join","qName","qParser","parser","parseUri","m","exec","uri","encoded","indexOf","decodeURIComponent","replace","$0","$1","$2","scopeEval","source","scope","values","upsert","diffFun","docRev","_rev","newDoc","updated","_id","tryAndPut","put","thisAtob","atob","thisBtoa","btoa","createBlob","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","binaryStringToArrayBuffer","bin","buf","charCodeAt","binStringToBluffer","binString","b64ToBluffer","b64","arrayBufferToBinaryString","buffer","binary","bytes","String","fromCharCode","readAsBinaryString","blob","reader","FileReader","hasBinaryString","onloadend","readAsArrayBuffer","blobToBinaryString","blobOrBuffer","blobToBase64","base64","setImmediateShim","global","setImmediate","setTimeout","MD5_CHUNK_SIZE","rawToBase64","raw","sliceBlob","start","end","appendBlob","arrayBuffer","appendString","string","appendBinary","binaryMd5","inputIsString","chunkSize","chunks","ceil","currentChunk","next","loadNextChunk","done","destroy","stringMd5","hash","deterministic_revs","clonedDoc","v4","toLowerCase","_rev_tree","uuid","winningRev","metadata","winningId","winningPos","winningDeleted","toVisit","rev_tree","node","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","a","b","collectLeaves","leaves","isLeaf","acc","sort","reverse","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","binarySearch","item","comparator","low","high","mid","insertSorted","idx","splice","pathToTree","path","numStemmed","root","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","queue","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","diff","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","stem","depth","stemmedRevs","stemmed","merge","newTree","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","latest","historyNode","historyRev","l","Changes$1","tryCatchInChangeListener","pending","lastSeq","complete","removeAllListeners","onDestroy","cancel","isCancelled","bind","validateChanges","processChange","changeList","style","_conflicts","PouchDB","_changesFilterPlugin","validate","doChanges","continuous","live","update_seq","normalize","shouldFilter","descending","limit","newPromise","_changes","compare","left","right","yankError","cleanDocs","_deleted","atts","compareByIdThenRev","idCompare","aStart","_revisions","bStart","computeHeight","height","edges","prnt","rev$$1","from","edge","allDocsKeysParse","skip","doNextCompaction","task","_compactionQueue","catch","last_seq","_compact","shift","attachmentNameError","charAt","AbstractPouchDB","post","bulkDocs","_putLocal","_removeLocal","force","transformForceOptionToNewEditsOption","putDoc","oldRevId","oldRevNum","newRevNum","newRevId","new_edits","_put","putAttachment","attachmentId","api","createAttachment","prevrevpos","content_type","revpos","removeAttachment","remove","docOrId","optsOrRev","was_delete","revsDiff","count","missing","addToMissing","revId","processDoc","missingForId","_getRevisionTree","missingObj","compactDocument","maxHeight","revTree","candidates","_doCompaction","compact","return_docs","promises","row","onComplete","all","deltaFunc","_getLocal","finishOpenRevs","existing","_get","revs_info","splittedRev","revNo","currentPath","hashIndex","hashFoundAtRevPos","indexOfRev","howMany","_revs_info","_getAttachment","getAttachment","allDocs","start_key","startkey","end_key","endkey","TypeError","incompatibleOpt","_allDocs","close","_close","_info","db_name","auto_compaction","adapter","_type","attachmentError","_bulkDocs","registerDependentDatabase","dependentDb","depDB","__opts","dependentDbs","usePrefix","use_prefix","destroyDb","_destroy","localDoc","deletedMap","trueName","RegExp","prefix","TaskQueue","execute","fail","ready","parseAdapter","match","adapters","preferredAdapters","adapterName","prepareForDestruction","onDestroyed","from_constructor","onClosed","prefixedName","backend","_adapter","valid","AbortController","abort","f$1","fetch","h","Headers","eventEmitter","setUpEventEmitter","Pouch","destructListeners","_destructionListeners","onConstructorRef","onConstructorUnref","dbList","onConstructorDestroyed","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","url","version","getFieldFromDoc","parsedField","compare$1","parseField","fieldName","fields","current","ch","combinationFields","isCombinationalField","field","getKey","getValue","mergeAndedSelectors","selectors","selector","matcher","$eq","fieldMatchers","operator","mergeGtGte","mergeLtLte","mergeNe","mergeEq","$gte","$gt","$lte","$lt","$ne","mergeAndedSelectorsNested","isAndInSelector","isAnd","massageSelector","input","wasAnded","orOrNor","subSelector","pad","padWith","upToLength","padding","targetLength","padLeft","MIN_MAGNITUDE","MAGNITUDE_DIGITS","SEP","collate","normalizeKey","ai","collationIndex","bi","stringCollate","arrayCollate","objectCollate","Infinity","isNaN","origKey","toJSON","k","val","indexify","numToIndexableString","toIndexableString","objKey","zero","parseNumber","originalIdx","num","neg","numAsString","magAsString","magnitude","parseFloat","stack","metaStack","lastMetaElement","element","lastElementIndex","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","ak","bk","expFormat","toExponential","magForComparison","magString","factor","abs","factorStr","toFixed","createFieldSorter","getFieldValuesAsArray","sorting","docFieldValue","aRow","bRow","aFieldValues","bFieldValues","collation","filterInMemoryFields","rows","requestDef","inMemoryFields","rowFilter","fieldSorter","every","matchCominationalSelector","matchSelector","userOperator","userValue","some","orMatchers","find","matchers","fieldExists","fieldIsNotUndefined","modField","divisor","mod","arrayContainsValue","arrayContainsAllValues","arraySize","regexMatch","re","typeMatch","neValue","matchesSelector","rowsMatched","evalFilter","evalView","code","filterName","view","changesHandler","doc_ids","viewName","ddoc","mapFun","views","filterFun","filters","applyChangesFilterPlugin","toObject","reduce","reservedWords","dataWords","parseRevisionInfo","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","dbOpts","nRevNum","revInfo","specialKey","parseBase64","preprocessString","blobType","asBinary","digest","preprocessBlob","md5","preprocessAttachment","preprocessAttachments","docInfos","docv","overallErr","docInfo","recv","processedAttachment","updateDoc","revLimit","prev","writeDoc","previousWinningRev","previouslyDeleted","isRoot","inConflict","newRev","rev_map","winningRev$$1","winningRevIsDeleted","delta","newRevIsDeleted","rootIsMissing","processDocs","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","idsToDocs","docsDone","docsToDo","checkAllDocsDone","currentDoc","docWritten","nextDoc","ADAPTER_VERSION","DOC_STORE","BY_SEQ_STORE","ATTACH_STORE","ATTACH_AND_SEQ_STORE","META_STORE","LOCAL_STORE","DETECT_BLOB_SUPPORT_STORE","safeJsonParse","parse","safeJsonStringify","json","idbError","evt","encodeMetadata","deletedOrLocal","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","body","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","onsuccess","postProcessAttachments","attNames","resolve","compactRevs","possiblyOrphanedDigests","seqStore","attStore","attAndSeqStore","deleteOrphanedAttachments","countReq","IDBKeyRange","bound","cursor","openCursor","only","event","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","docInfoError","metaDoc","allDocsProcessed","docCountDelta","preconditionErrored","_meta","blobSupport","startTransaction","txnResult","onabort","ontimeout","oncomplete","updateDocCountIfReady","verifyAttachments","fetchExistingDocs","onAllDocsProcessed","idbProcessDocs","revs_limit","docCount","numFetched","readMetadata","verifyAttachment","finish","digests","filename","attErr","isUpdate","hasAttachments","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","metaDataReq","afterPutMetadata","afterPutDocError","preventDefault","stopPropagation","getKeyReq","putReq","insertAttachmentMappings","onerror","collectResults","attachmentSaved","saveAttachment","attsAdded","attsToAdd","newAtt","runBatchedCursor","keyRange","batchSize","onBatch","useGetAll","getAll","getAllKeys","keysBatch","valuesBatch","pseudoCursor","onGetAll","onGetAllKeys","continuePseudoCursor","lastKey","newKeyRange","upper","upperOpen","lowerBound","onCursor","onSuccess","allDocsKeys","createKeyRange","inclusiveEnd","upperBound","idbAllDocs","inclusive_end","keyRangeError","onTxnComplete","docIdRevIndex","updateSeq","getMaxUpdateSeq","maxKey","fetchDocAsynchronously","onGetDoc","allDocsInner","batchValues","batchValue","batchKeys","onResultsReady","returnVal","total_rows","checkBlobSupport","blob$$1","matchedChrome","navigator","userAgent","matchedEdge","countDocs","running","tryCode","applyNext","enqueueTask","action","runAction","runCallback","runNext","docIds","numResults","docIdsToMetadata","winningDocs","metadatas","processMetadataAndWinningDoc","winningDoc","filtered","onBatchDone","fetchWinningDocAndMetadata","onGetMetadata","docIdRev","objectStores","cachedDBs","blobSupportPromise","openReqList","IdbPouch","thisCallback","init","createSchema","createObjectStore","keyPath","autoIncrement","createIndex","unique","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","local","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","fetchMetadataSeq","metadataSeq","onGetMetadataSeq","instanceId","idb_bulkDocs","reqOpts","idb_get","attachId","attachment","blobData","idb_info","doc_count","idb_attachment_format","idb_allDocs","idbChanges","oldRev","ret","oStore","oldDoc","openReq","indexedDB","deleteDatabase","cached","open","onupgradeneeded","oldVersion","currentTarget","migrations","migration","onversionchange","storedMetaDoc","completeSetup","storeMetaDocIfReady","instanceKey","IDBPouch","pool","promiseFactories","doNext","runNextBatch","thisErr","CHANGES_BATCH_SIZE","MAX_SIMULTANEOUS_REVS","CHANGES_TIMEOUT_BUFFER","DEFAULT_HEARTBEAT","supportsBulkGetMap","readAttachmentsAsBlobOrBuffer","encodeDocId","encodeURIComponent","preprocessAttachments$1","hasUrlPrefix","protocol","getHost","substr","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","params","shouldCacheBust","ua","isIE","isTrident","isEdge","isGET","HttpPouch","dbUrl","ourFetch","options","headers","credentials","nAuth","token","unescape","now","fetchFun","adapterFun$$1","setup","fetchJSON","response","v","setupPromise","skip_setup","uuid$$1","ping","compact_running","interval","doBulkGet","doBulkGetShim","numBatches","onResult","batchNum","subOpts","supportsBulkGet","fetchAttachments","filenames","fetchData","encodeAttachmentId","typeFieldDescriptor","__proto__","fetchAllAttachments","docOrDocs","contentType","process","browser","paramStr","batch_size","heartbeat","requestTimeout","timeout","leftToFetch","feed","seq_interval","param_name","controller","lastFetchedSeq","aborted","fetchOpts","signal","fetched","raw_results_length","finished","HttpPouch$1","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","promisedCallback","callbackify","fin","finalPromiseFactory","sequentialize","promiseFactory","that","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","log","evalFunctionWithEval","TaskQueue$1","createViewSignature","reduceFun","createView","sourceDB","temporary","localDocName","viewSignature","cachedViews","_cachedViews","promiseForView","depDbName","diffFunction","fullViewName","depDbs","lastSeqDoc","persistentQueues","tempViewQueue","CHANGES_BATCH_SIZE$1","parseViewName","isGenOne","emitError","createAbstractMapReduce","mapper","reducer","ddocValidator","tryMap","tryReduce","rereduce","output","sortByKeyThenValue","y","keyCompare","sliceResults","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","coerceOptions","group_level","checkPositiveInteger","number","checkQueryParseError","startkeyName","endkeyName","group","optionName","httpQuery","MAX_URL_LENGTH","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","metaDocId","defaultMetaDoc","docData","indexableKeysToKeyValues","getMetaDoc","getKeyValueDocs","processKeyValueDocs","kvDocsRes","kvDocs","oldKeys","keyValue","newKeys","kvDoc","saveKeyValues","seqDocId","listOfDocsToPersist","docsToPersist","getQueue","updateView","updateViewInQueue","mapResults","currentSeq","processNextBatch","createDocIdsToChangesAndEmits","createIndexableKeysToKeyValues","emittedKeyValue","complexKey","reduceView","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","queryView","queryViewInQueue","totalRows","shouldReduce","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","onMapResultsReady","finalResults","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","httpViewCleanup","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","queryPromised","createViewPromise","stale","abstractQuery","abstractViewCleanup","viewCleanup","builtInReduce","_sum","_count","_stats","sumsqr","_sumsqr","getBuiltIn","reduceFunString","origMap","builtIn","abstract","mapreduce","isGenOne$1","fileHasChanged","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","src","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRevs","missingRev","getDocs","state","resultDocs","getAllDocs","bulkGetOpts","bulkGetResponse","bulkGetInfo","Boolean","hasConflicts","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","CHECKPOINT_VERSION","REPLICATOR","CHECKPOINT_HISTORY_SIZE","LOWEST_SEQ","updateCheckpoint","checkpoint","session","returnValue","session_id","replicator","unshift","Checkpointer","writeCheckpoint","updateTarget","updateSource","writeTargetCheckpoint","writeSourceCheckpoint","isForbiddenError","comparisons","targetDoc","sourceDoc","compareReplicationLogs","getCheckpoint","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","sourceId","hasSessionId","sessionId","props","rest","floor","STARTING_BACK_OFF","backOff","retry","back_off_function","backOffSet","backoffTimeSet","current_back_off","removeBackOffSetter","removeBackOffTimeSet","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterViewName","queryData","md5sum","replicate","batches","currentBatch","pendingBatch","writingCheckpoint","changesCompleted","replicationCompleted","batches_limit","changesPending","repId","checkpointer","changedDocs","start_time","docs_read","docs_written","doc_write_failures","errors","initCheckpointer","checkpointOpts","writeDocs","bulkOpts","completeReplication","errorsById","create","errorsNo","errorName","finishBatch","outResult","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","startNextBatch","processPendingBatch","abortReplication","immediate$$1","fatalError","end_time","onChangesComplete","onChangesError","abortChanges","_abortChanges","startChanges","_addedListeners","Replication","_readyCalled","cleanup","toPouch","PouchConstructor","replicateWrapper","replicateRet","srcPouch","targetPouch","Sync","sync","canceled","optsPush","optsPull","pull","pushPaused","pullPaused","pullChange","direction","pushChange","pushDenied","pullDenied","pushActive","pullActive","removed","removeAll","isChange","isDenied","isPaused","isActive","addOneListener","listener","out","success","replication","replicateMethods","other"],"mappings":"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","sourcesContent":["import immediate from 'immediate';\nimport uuidV4 from 'uuid';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\nimport getArguments from 'argsarray';\nimport inherits from 'inherits';\nimport { EventEmitter } from 'events';\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction rev(doc, deterministic_revs) {\n  var clonedDoc = clone(doc);\n  if (!deterministic_revs) {\n    return uuidV4.v4().replace(/-/g, '').toLowerCase();\n  }\n\n  delete clonedDoc._rev_tree;\n  return stringMd5(JSON.stringify(clonedDoc));\n}\n\nvar uuid = uuidV4.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$1, EventEmitter);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      immediate(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EventEmitter);\n\nfunction AbstractPouchDB() {\n  EventEmitter.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = ('return_docs' in opts) ? opts.return_docs : !opts.live;\n\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\n// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = (typeof AbortController !== 'undefined')\n    ? AbortController\n    : function () { return {abort: function () {}}; };\n\nvar f$1 = fetch;\nvar h = Headers;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EventEmitter.prototype).forEach(function (key) {\n    if (typeof EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.2.1\";\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n//#7458: execute function mergeAndedSelectors on nested $and\nfunction mergeAndedSelectorsNested(obj) {\n    for (var prop in obj) {\n        if (Array.isArray(obj)) {\n            for (var i in obj) {\n                if (obj[i]['$and']) {\n                    obj[i] = mergeAndedSelectors(obj[i]['$and']);\n                }\n            }\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            mergeAndedSelectorsNested(value); // <- recursive call\n        }\n    }\n    return obj;\n}\n\n//#7458: determine id $and is present in selector (at any level)\nfunction isAndInSelector(obj, isAnd) {\n    for (var prop in obj) {\n        if (prop === '$and') {\n            isAnd = true;\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            isAnd = isAndInSelector(value, isAnd); // <- recursive call\n        }\n    }\n    return isAnd;\n}\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n    //#7458: if $and is present in selector (at any level) merge nested $and\n    if (isAndInSelector(result, false)) {\n        result = mergeAndedSelectorsNested(result);\n        if ('$and' in result) {\n            result = mergeAndedSelectors(result['$and']);\n        }\n        wasAnded = true;\n    }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n        /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  // is matcher an object, if so continue recursion\n  if (typeof matcher === 'object') {\n    return Object.keys(matcher).every(function (userOperator) {\n      var userValue = matcher[userOperator];\n      return match(userOperator, doc, userValue, parsedField, docFieldValue);\n    });\n  }\n\n  // no more depth, No need to recurse further\n  return matcher === docFieldValue;\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-/.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  if (batchSize === -1) {\n    batchSize = 1000;\n  }\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange ; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      immediate(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n\n      if (!filtered) {\n        return Promise.resolve();\n      }\n      numResults++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n      // process the attachment immediately\n      // for the benefit of live listeners\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n\n    function onBatchDone() {\n      var promises = [];\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return immediate(function () {\n      callback(null, api);\n    });\n  }\n\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function (e) {\n    var msg = e.target.error && e.target.error.message;\n\n    if (!msg) {\n      msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    } else if (msg.indexOf(\"stored database is a higher version\") !== -1) {\n      msg = new Error('This DB was created with the newer \"indexeddb\" adapter, but you are trying to open it with the older \"idb\" adapter');\n    }\n\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc && doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    // Ensure prefix has a trailing slash\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n\n  var uri = parseUri(name);\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\nfunction shouldCacheBust(opts) {\n  var ua = (typeof navigator !== 'undefined' && navigator.userAgent) ?\n      navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n\n  var ourFetch = function (url, options) {\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    options.credentials = 'include';\n\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n\n    /* istanbul ignore if */\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n\n  function fetchJSON(url, options, callback) {\n\n    var result = {};\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n\n  var setupPromise;\n\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {method: 'PUT'});\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  immediate(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).catch(function () {\n      return {};\n    }).then(function (result) {\n      // Bad response or missing `uuid` should not prevent ID generation.\n      var uuid$$1 = (result && result.uuid) ?\n          (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    fetchJSON(genDBUrl(host, '_compact'), {method: 'POST'}).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({ docs: opts.docs})\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(null, result.data);\n      }).catch(cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      var url = path.substring(0, 1) === '/' ?\n        genUrl(host, path.substring(1)) :\n        genDBUrl(host, path);\n      return ourFetch(url, options);\n    });\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetchData(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n            '?rev=' + doc._rev;\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if ('buffer' in response) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n            if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n              blob.type = att.content_type;\n            }\n            return blob;\n          }\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1;\n\n    fetchJSON(url, {method: 'DELETE'}, cb).catch(cb);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId,\n                                                            opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n        encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {method: 'GET'}).then(function (response) {\n      contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser && typeof response.buffer === 'function') {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        blob.type = contentType;\n      }\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =  adapterFun$$1('removeAttachment', function (docId,\n                                                                   attachmentId,\n                                                                   rev$$1,\n                                                                   callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n                       encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n    fetchJSON(url, {method: 'DELETE'}, callback).catch(callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId,\n                                                            rev$$1, blob,\n                                                            type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    // Add the attachment\n    fetchJSON(url, {\n      headers: new h({'Content-Type': type}),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n       method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, result.data);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout : 30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    /* istanbul ignore if */\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var controller = new a();\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        immediate(function () { fetchData(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetchData(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {method: 'DELETE'}).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {ok: true});\n      } else {\n        callback(err);\n      }\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      immediate(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      immediate(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({'Content-Type': 'application/json'}),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n\n    return db.fetch('_temp_view' + params, {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$1();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              immediate(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return Promise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate$$1) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate$$1 ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    immediate(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EventEmitter);\nfunction Replication() {\n  EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EventEmitter);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = Promise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\n// Pull from src because pouchdb-node/pouchdb-browser themselves\n\nexport default PouchDB;\n"]},"metadata":{},"sourceType":"module"}